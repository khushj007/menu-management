// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



// Category model
model Category {
  id              Int          @id @default(autoincrement())
  name            String       @unique
  image           String?     
  description     String       @default("description not available")  
  taxApplicable   Boolean      @default(false)  
  tax             Float?       // Nullable, as tax might not always be applicable
  taxType         String?      // Nullable, as tax type might not always be applicable
  
  // Relationships
  subcategories   SubCategory[]  
  items           Item[]
}

// SubCategory model
model SubCategory {
  id              Int          @id @default(autoincrement())
  name            String       @unique
  image           String?      
  description     String       @default("description not available")  
  taxApplicable   Boolean      @default(false)  
  tax             Float?       // Nullable, as tax might not always be applicable
  baseCategory    Category     @relation(fields: [categoryId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  categoryId      Int
  // Relationships
  items           Item[]
}

// Item model
model Item {
  id              Int         @id @default(autoincrement())
  name            String      @unique
  image           String?       
  description     String      @default("description not available")  
  taxApplicable   Boolean     @default(false)
  tax             Float?       // Nullable, as tax might not always be applicable
  baseAmount      Float
  discount        Float       @default(0)
  totalAmount     Float       
  baseCategory    Category    @relation(fields: [categoryId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  subCategory     SubCategory @relation(fields: [subCategoryId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  categoryId      Int
  subCategoryId   Int
}
